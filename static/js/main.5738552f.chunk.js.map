{"version":3,"sources":["components/GameOver/GameOver.module.css","containers/Game/Game.module.css","containers/Field/Field.module.css","cardsRepository.js","store/actions/cards.js","store/actions/actions-types.js","store/actions/game.js","components/Card/Card.js","containers/Field/Filed.js","components/GameOver/GameOver.js","containers/Game/Game.js","App.js","serviceWorker.js","store/reducers/cards.js","store/reducers/game.js","store/reducers/index.js","index.js","components/Card/Card.module.css"],"names":["module","exports","cards","imageId","imageSrc","process","initField","dispatch","type","cardsLoaded","shuffled","slice","forEach","card","push","Object","assign","i","length","j","Math","floor","random","result","id","getShuffledCards","flipCard","getState","list","flippedCards","guessedCards","indexOf","unGuessedFlipped","flipped","guessed","concat","keys","isOver","ids","setTimeout","cardId","index","splice","setFlippedCards","Card","props","innerClasses","classes","Inner","isFlipped","InnerFlipped","className","onClick","join","Front","Back","src","alt","Field","cardClickHandler","this","map","key","React","Component","connect","state","GameOver","Title","moves","ButtonStart","onStartNewGame","Game","clickNewGameHandler","startNewGame","GameTitle","game","App","Boolean","window","location","hostname","match","initialState","cardsReducer","action","gameReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,YAAc,gC,mBCAtGD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,0B,mBCAxDD,EAAOC,QAAU,CAAC,MAAQ,uB,gMCDpBC,EAAQ,CACV,CACIC,QAAS,EACTC,SAAUC,4CAEd,CACIF,QAAS,EACTC,SAAUC,wCAEd,CACIF,QAAS,EACTC,SAAUC,8CAEd,CACIF,QAAS,EACTC,SAAUC,wCAEd,CACIF,QAAS,EACTC,SAAUC,yCAEd,CACIF,QAAS,EACTC,SAAUC,yCAEd,CACIF,QAAS,EACTC,SAAUC,wCAEd,CACIF,QAAS,EACTC,SAAUC,4CC3BX,SAASC,IACZ,OAAO,SAAAC,GAGHA,EA2DR,SAAqBL,GACjB,MAAO,CACHM,KCrEyB,eDsEzBN,SA9DSO,CD2BV,WACH,IAAMC,EAAWR,EAAMS,QAEvBD,EAASE,SAAQ,SAACC,GACdH,EAASI,KAAKC,OAAOC,OAAO,GAAIH,OAGpC,IAAK,IAAII,EAAIP,EAASQ,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC1C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADA,EAEb,CAACP,EAASS,GAAIT,EAASO,IAAnDP,EAASO,GAFgC,KAE5BP,EAASS,GAFmB,KAO9C,IADA,IAAMI,EAAS,GACNN,EAAI,EAAGA,EAAIP,EAASQ,OAAQD,IAAK,CACtC,IAAMJ,EAAOH,EAASO,GACtBJ,EAAKW,GAAKP,EAAI,EAEdM,EAAOV,EAAKW,IAAMX,EAGtB,OAAOU,EClDWE,MAMf,SAASC,EAASF,GACrB,OAAO,SAACjB,EAAUoB,GAAc,IAAD,EACgBA,IAAWzB,MAA/C0B,EADoB,EACpBA,KAAMC,EADc,EACdA,aAAcC,EADA,EACAA,aAC3B,IAAK,IAAMD,EAAaE,QAAQP,GAAhC,CAIA,IAAMQ,EAAmB,GANE,uBAQ3B,YAAmBH,EAAnB,+CAAiC,CAAC,IAAvBhB,EAAsB,SACxB,IAAMiB,EAAaC,QAAQlB,IAC5BmB,EAAiBlB,KAAKD,IAVH,kFAc3B,IAAMoB,EAAUJ,EAAalB,QAE7B,GAAgC,IAA5BqB,EAAiBd,OAAc,CAC/B,GAAIU,EAAKJ,GAAIrB,UAAYyB,EAAKI,EAAiB,IAAI7B,QAAS,CACxD,IAAM+B,EAAUJ,EAAanB,QAAQwB,OAAO,CAACX,EAAIQ,EAAiB,KAE9DE,EAAQhB,SAAWH,OAAOqB,KAAKR,GAAMV,QACrCX,EElBT,CACHC,KDbsB,gBCctB6B,QFgBiC,IAGzB9B,EA6CL,CACHC,KCjFyB,oBDkFzB8B,IA/CiCJ,SAEzBK,YAAW,WACP,cAAqB,CAACP,EAAiB,GAAIR,GAA3C,eAAgD,CAA3C,IAAMgB,EAAM,KACPC,EAAQR,EAAQF,QAAQS,IACf,IAAXC,GACAR,EAAQS,OAAOD,EAAO,GAI9BlC,EAASoC,EAAgBV,EAAQtB,YAClC,KAGPJ,EEzCD,CACHC,KDNsB,uBD+Cf,CAAC,IAAD,uBACH,YAAqBwB,EAArB,+CAAuC,CAAC,IAA7BQ,EAA4B,QAC7BC,EAAQR,EAAQF,QAAQS,IACf,IAAXC,GACAR,EAAQS,OAAOD,EAAO,IAJ3B,mFASPR,EAAQnB,KAAKU,GAEbjB,EAASoC,EAAgBV,MAWjC,SAASU,EAAgBL,GACrB,MAAO,CACH9B,KC3EyB,oBD4EzB8B,O,oBGxDOM,EAlBF,SAAAC,GACT,IAAMC,EAAe,CAACC,IAAQC,OAK9B,OAJIH,EAAMI,WACNH,EAAahC,KAAKiC,IAAQG,cAI1B,yBAAKC,UAAWJ,IAAQH,KAAMQ,QAAS,kBAAMP,EAAMO,QAAQP,EAAMhC,KAAKW,MAClE,yBAAK2B,UAAWL,EAAaO,KAAK,MAC9B,yBAAKF,UAAWJ,IAAQO,QACxB,yBAAKH,UAAWJ,IAAQQ,MACpB,yBAAKC,IAAKX,EAAMhC,KAAKT,SAAUqD,IAAK,QAAUZ,EAAMhC,KAAKW,SCRvEkC,E,2MACFC,iBAAmB,SAACnC,GAChB,EAAKqB,MAAMnB,SAASF,I,mFAIpBoC,KAAKf,MAAMvC,c,+BAGL,IAAD,OACL,OACI,yBAAK6C,UAAWJ,IAAQW,OAEhB3C,OAAOqB,KAAKwB,KAAKf,MAAM3C,OAAO2D,KAAI,SAAAC,GAC9B,IAAMjD,EAAO,EAAKgC,MAAM3C,MAAM4D,GAExBb,GAAc,IAAM,EAAKJ,MAAMhB,aAAaE,QAAQlB,EAAKW,IAE/D,OAAO,kBAAC,EAAD,CACHsC,IAAKjD,EAAKW,GACVX,KAAMA,EACNuC,QAAS,EAAKO,iBACdV,UAAWA,Y,GAtBnBc,IAAMC,WA6CXC,mBAdf,SAAyBC,GACrB,MAAO,CACHhE,MAAcgE,EAAMhE,MAAM0B,KAC1BC,aAAcqC,EAAMhE,MAAM2B,iBAIlC,SAA4BtB,GACxB,MAAO,CACHD,UAAW,kBAAMC,EAASD,MAC1BoB,SAAU,SAACF,GAAD,OAAQjB,EAASmB,EAASF,QAI7ByC,CAA6CP,G,kCCvC7CS,EATE,SAACtB,GACd,OAAO,yBAAKM,UAAWJ,IAAQoB,UAC3B,yBAAKhB,UAAWJ,IAAQqB,OAAxB,wBAC0BvB,EAAMwB,MADhC,WAGA,4BAAQlB,UAAWJ,IAAQuB,YAAalB,QAASP,EAAM0B,gBAAvD,oBCDFC,E,2MAEFC,oBAAsB,WAClB,EAAK5B,MAAM6B,gB,wEAIX,OACI,yBAAKvB,UAAWJ,IAAQyB,MAEhBZ,KAAKf,MAAMR,OACL,kBAAC,EAAD,CAAUgC,MAAOT,KAAKf,MAAMwB,MAAOE,eAAgBX,KAAKa,sBACxD,yBAAKtB,UAAWJ,IAAQ4B,WAAxB,uD,GAZPZ,IAAMC,WAmCVC,mBAhBf,SAAyBC,GACrB,MAAO,CACH7B,OAAQ6B,EAAMU,KAAKvC,OACnBgC,MAAOH,EAAMU,KAAKP,UAI1B,SAA4B9D,GACxB,MAAO,CACHmE,aAAc,WACVnE,EAASD,KACTC,EJjCD,CACHC,KDCsB,iBKoCfyD,CAA6CO,GChC7CK,G,MALH,kBAAM,8BACd,kBAAC,EAAD,MACA,kBAAC,EAAD,SCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kBChBAC,EAAe,CACjBvD,KAAM,GACNC,aAAc,GACdC,aAAc,IAsBHsD,EAnBM,WAAmC,IAAlClB,EAAiC,uDAAzBiB,EAAcE,EAAW,uCACnD,OAAQA,EAAO7E,MACX,IRVyB,eQWrB,OAAO,eAAK0D,EAAZ,CAAmBtC,KAAMyD,EAAOnF,QAEpC,IRZyB,oBQarB,OAAO,eAAKgE,EAAZ,CAAmBrC,aAAcwD,EAAO/C,MAE5C,IRdyB,oBQerB,OAAO,eAAK4B,EAAZ,CAAmBpC,aAAcuD,EAAO/C,MAE5C,IRbsB,WQclB,OAAO,eAAK4B,EAAZ,CAAmBpC,aAAc,GAAID,aAAc,KAEvD,QACI,OAAOqC,ICrBbiB,EAAe,CACjB9C,QAAQ,EACRgC,MAAQ,GAmBGiB,EAhBK,WAAmC,IAAlCpB,EAAiC,uDAAzBiB,EAAcE,EAAW,uCAClD,OAAQA,EAAO7E,MACX,ITLsB,gBSMlB,OAAO,eAAK0D,EAAZ,CAAmB7B,OAAQgD,EAAOhD,SAEtC,ITPsB,iBSQlB,OAAO,eAAK6B,EAAZ,CAAmBG,MAAOH,EAAMG,MAAQ,IAE5C,ITTsB,WSUlB,MAAO,CAACA,MAAO,EAAGhC,QAAQ,GAE9B,QACI,OAAO6B,ICfJqB,cAAgB,CAC3BrF,MAAOkF,EACPR,KAAMU,I,QCGJE,EACsB,kBAAXT,QACPA,OAAOU,qCACHV,OAAOU,qCAAqC,IACvCC,IAGbC,EAAQC,YAAYC,EAAUL,EAChCM,YAAgBC,OAGdC,EAAM,kBAAC,IAAD,CAAUL,MAAOA,GACzB,kBAAC,EAAD,OAGJM,IAASC,OAAOF,EAAKG,SAASC,eAAe,SJ2GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBKxI5B9G,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,aAAe,2BAA2B,MAAQ,oBAAoB,KAAO,sB","file":"static/js/main.5738552f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameOver\":\"GameOver_GameOver__aWn7F\",\"Title\":\"GameOver_Title__fYN6-\",\"ButtonStart\":\"GameOver_ButtonStart__16gYv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"Game_Game__2qp9N\",\"GameTitle\":\"Game_GameTitle__9CMfW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Field\":\"Field_Field__1LPlV\"};","const cards = [\n    {\n        imageId: 1,\n        imageSrc: process.env.PUBLIC_URL + '/img/chicken.png',\n    },\n    {\n        imageId: 2,\n        imageSrc: process.env.PUBLIC_URL + '/img/cat.png',\n    },\n    {\n        imageId: 3,\n        imageSrc: process.env.PUBLIC_URL + '/img/chameleon.png',\n    },\n    {\n        imageId: 4,\n        imageSrc: process.env.PUBLIC_URL + '/img/cow.png',\n    },\n    {\n        imageId: 5,\n        imageSrc: process.env.PUBLIC_URL + '/img/duck.png',\n    },\n    {\n        imageId: 6,\n        imageSrc: process.env.PUBLIC_URL + '/img/lion.png',\n    },\n    {\n        imageId: 7,\n        imageSrc: process.env.PUBLIC_URL + '/img/pig.png',\n    },\n    {\n        imageId: 8,\n        imageSrc: process.env.PUBLIC_URL + '/img/toucan.png',\n    },\n];\n\nexport function getShuffledCards() {\n    const shuffled = cards.slice();\n\n    shuffled.forEach((card) => {\n        shuffled.push(Object.assign({}, card))\n    });\n\n    for (let i = shuffled.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n\n\n    const result = {};\n    for (let i = 0; i < shuffled.length; i++) {\n        const card = shuffled[i];\n        card.id = i + 1;\n\n        result[card.id] = card;\n    }\n\n    return result;\n}\n","import {CARDS_LOADED, SET_FLIPPED_CARDS, SET_GUESSED_CARDS} from \"./actions-types\";\nimport {getShuffledCards} from \"../../cardsRepository\";\nimport {incrementMove, setGameOver} from \"./game\";\n\nexport function initField() {\n    return dispatch => {\n        const cards = getShuffledCards();\n\n        dispatch(cardsLoaded(cards));\n    };\n}\n\nexport function flipCard(id) {\n    return (dispatch, getState) => {\n        const {list, flippedCards, guessedCards} = getState().cards;\n        if (-1 !== flippedCards.indexOf(id)) {\n            return;\n        }\n\n        const unGuessedFlipped = [];\n\n        for (const card of flippedCards) {\n            if (-1 === guessedCards.indexOf(card)) {\n                unGuessedFlipped.push(card);\n            }\n        }\n\n        const flipped = flippedCards.slice();\n\n        if (unGuessedFlipped.length === 1) {\n            if (list[id].imageId === list[unGuessedFlipped[0]].imageId) {\n                const guessed = guessedCards.slice().concat([id, unGuessedFlipped[0]]);\n\n                if (guessed.length === Object.keys(list).length) {\n                    dispatch(setGameOver(true))\n                }\n\n                dispatch(setGuessedCards(guessed));\n            } else {\n                setTimeout(() => {\n                    for (const cardId of [unGuessedFlipped[0], id]) {\n                        const index = flipped.indexOf(cardId);\n                        if (index !== -1) {\n                            flipped.splice(index, 1);\n                        }\n                    }\n\n                    dispatch(setFlippedCards(flipped.slice()));\n                }, 500);\n            }\n\n            dispatch(incrementMove());\n        } else {\n            for (const cardId of unGuessedFlipped) {\n                const index = flipped.indexOf(cardId);\n                if (index !== -1) {\n                    flipped.splice(index, 1);\n                }\n            }\n        }\n\n        flipped.push(id);\n\n        dispatch(setFlippedCards(flipped));\n    }\n}\n\nfunction cardsLoaded(cards) {\n    return {\n        type: CARDS_LOADED,\n        cards\n    }\n}\n\nfunction setFlippedCards(ids) {\n    return {\n        type: SET_FLIPPED_CARDS,\n        ids\n    }\n}\n\nfunction setGuessedCards(ids) {\n    return {\n        type: SET_GUESSED_CARDS,\n        ids\n    }\n}\n","export const CARDS_LOADED      = 'CARDS_LOADED';\nexport const SET_FLIPPED_CARDS = 'SET_FLIPPED_CARDS';\nexport const SET_GUESSED_CARDS = 'SET_GUESSED_CARDS';\n\nexport const SET_GAME_OVER  = 'SET_GAME_OVER';\nexport const INCREMENT_MOVE = 'INCREMENT_MOVE';\nexport const START_NEW_GAME = 'NEW_GAME';\n","import {INCREMENT_MOVE, SET_GAME_OVER, START_NEW_GAME} from \"./actions-types\";\nimport {initField} from \"./cards\";\n\nexport function startNewGame() {\n    return {\n        type: START_NEW_GAME,\n    }\n}\n\nexport function incrementMove() {\n    return {\n        type: INCREMENT_MOVE,\n    }\n}\n\nexport function setGameOver(isOver) {\n    return {\n        type: SET_GAME_OVER,\n        isOver,\n    }\n}\n","import React from \"react\";\nimport classes from \"./Card.module.css\";\n\nconst Card = props => {\n    const innerClasses = [classes.Inner];\n    if (props.isFlipped) {\n        innerClasses.push(classes.InnerFlipped);\n    }\n\n    return (\n        <div className={classes.Card} onClick={() => props.onClick(props.card.id)}>\n            <div className={innerClasses.join(' ')}>\n                <div className={classes.Front}/>\n                <div className={classes.Back}>\n                    <img src={props.card.imageSrc} alt={'card ' + props.card.id} />\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Card;\n","import React from \"react\";\nimport classes from \"./Field.module.css\";\nimport {connect} from \"react-redux\";\nimport {flipCard, initField} from \"../../store/actions/cards\";\nimport Card from \"../../components/Card/Card\";\n\nclass Field extends React.Component {\n    cardClickHandler = (id) => {\n        this.props.flipCard(id);\n    };\n\n    componentDidMount() {\n        this.props.initField();\n    }\n\n    render() {\n        return (\n            <div className={classes.Field}>\n                {\n                    Object.keys(this.props.cards).map(key => {\n                        const card = this.props.cards[key];\n\n                        const isFlipped = (-1 !== this.props.flippedCards.indexOf(card.id));\n\n                        return <Card\n                            key={card.id}\n                            card={card}\n                            onClick={this.cardClickHandler}\n                            isFlipped={isFlipped}\n                        />\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        cards:        state.cards.list,\n        flippedCards: state.cards.flippedCards,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        initField: () => dispatch(initField()),\n        flipCard: (id) => dispatch(flipCard(id))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Field)\n","import React from \"react\";\nimport classes from \"./GameOver.module.css\";\n\nconst GameOver = (props) => {\n    return <div className={classes.GameOver}>\n        <div className={classes.Title}>\n            Bravo! You did it in {props.moves} moves!\n        </div>\n        <button className={classes.ButtonStart} onClick={props.onStartNewGame}>Start new game</button>\n    </div>\n};\n\nexport default GameOver;\n","import React from \"react\";\nimport classes from \"./Game.module.css\";\nimport {connect} from \"react-redux\";\nimport GameOver from \"../../components/GameOver/GameOver\";\nimport {startNewGame} from \"../../store/actions/game\";\nimport {initField} from \"../../store/actions/cards\";\n\nclass Game extends React.Component {\n\n    clickNewGameHandler = () => {\n        this.props.startNewGame();\n    };\n\n    render() {\n        return (\n            <div className={classes.Game}>\n                {\n                    this.props.isOver\n                        ? <GameOver moves={this.props.moves} onStartNewGame={this.clickNewGameHandler} />\n                        : <div className={classes.GameTitle}>Find pairs of images under the following tiles</div>\n                }\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isOver: state.game.isOver,\n        moves: state.game.moves,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        startNewGame: () => {\n            dispatch(initField());\n            dispatch(startNewGame());\n        },\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React from 'react';\nimport Field from \"./containers/Field/Filed\";\nimport Game from \"./containers/Game/Game\";\nimport \"./App.css\";\n\nconst App = () => <main>\n    <Game/>\n    <Field/>\n</main>;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {SET_FLIPPED_CARDS, CARDS_LOADED, SET_GUESSED_CARDS, START_NEW_GAME} from \"../actions/actions-types\";\n\nconst initialState = {\n    list: {},\n    flippedCards: [],\n    guessedCards: [],\n};\n\nconst cardsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CARDS_LOADED: {\n            return  {...state, list: action.cards}\n        }\n        case SET_FLIPPED_CARDS: {\n            return  {...state, flippedCards: action.ids}\n        }\n        case SET_GUESSED_CARDS: {\n            return  {...state, guessedCards: action.ids}\n        }\n        case START_NEW_GAME: {\n            return  {...state, guessedCards: [], flippedCards: []}\n        }\n        default:\n            return state;\n    }\n};\n\nexport default cardsReducer;\n","import {INCREMENT_MOVE, START_NEW_GAME, SET_GAME_OVER} from \"../actions/actions-types\";\n\nconst initialState = {\n    isOver: false,\n    moves:  0,\n};\n\nconst gameReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_GAME_OVER: {\n            return  {...state, isOver: action.isOver}\n        }\n        case INCREMENT_MOVE: {\n            return  {...state, moves: state.moves + 1}\n        }\n        case START_NEW_GAME: {\n            return {moves: 0, isOver: false};\n        }\n        default:\n            return state;\n    }\n};\n\nexport default gameReducer;\n","import {combineReducers} from \"redux\";\nimport cardsReducer from \"./cards\";\nimport gameReducer from \"./game\";\n\nexport default combineReducers({\n    cards: cardsReducer,\n    game: gameReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport reducers from \"./store/reducers\";\nimport {Provider} from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers =\n          typeof window === 'object' &&\n          window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n              window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n              }) : compose\n;\n\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunk),\n));\n\nconst app = <Provider store={store}>\n    <App/>\n</Provider>;\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__2v91Y\",\"Inner\":\"Card_Inner__3f39O\",\"InnerFlipped\":\"Card_InnerFlipped__27bYk\",\"Front\":\"Card_Front__2A_QT\",\"Back\":\"Card_Back__3gDbP\"};"],"sourceRoot":""}